# nginx.conf
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    upstream auth_service {
        server 172.19.2.3:8081;
        server 192.168.1.10:8081 backup;
    }

    upstream cart_service {
        server 172.19.2.4:8082;
        server 192.168.1.10:8082 backup;
    }

    upstream event_service {
        server 172.19.2.5:8083;
        server 192.168.1.10:8083 backup;
    }

    upstream kafka_queue_service {
        server 172.19.2.6:8084;
        server 192.168.1.10:8084 backup;
    }

    upstream order_service {
        server 172.19.2.7:8085;
        server 192.168.1.10:8085 backup;
    }

    upstream payment_service {
        server 172.19.2.8:8086;
        server 192.168.1.10:8086 backup;
    }

    upstream product_service {
        server 172.19.2.9:8087;
        server 192.168.1.10:8087 backup;
    }

    upstream store_service {
        server 172.19.2.10:8088;
        server 192.168.1.10:8088 backup;
    }

    upstream user_service {
        server 172.19.2.11:8089;
        server 192.168.1.10:8089 backup;
    }

    server {
        listen 80;

        # Routes for microservices
        location /auth_service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";

            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
                return 204;
            }

            proxy_pass http://auth_service;
        }

        location /cart_service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";

            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
                return 204;
            }

            proxy_pass http://cart_service;
        }

        location /event_service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";

            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
                return 204;
            }

            proxy_pass http://event_service;

        }

        location /kafka_queue_service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
                return 204;
            }

            proxy_pass http://kafka_queue_service;

        }

        location /order_service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
                return 204;
            }

            proxy_pass http://order_service;

        }

        location /payment_service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
                return 204;
            }

            proxy_pass http://payment_service;

        }

        location /product_service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
                return 204;
            }

            proxy_pass http://product_service;

        }

        location /store_service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
                return 204;
            }

            proxy_pass http://store_service;

        }

        location /user_service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
                return 204;
            }

            proxy_pass http://user_service;

        }
    }

    # Global timeouts
    proxy_connect_timeout 3s;  # Reduce connection timeout to 5 seconds
    proxy_read_timeout 3s;    # Reduce read timeout to 10 seconds
    proxy_send_timeout 3s;    # Reduce send timeout to 10 seconds
}
