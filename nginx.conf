# nginx.conf
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    upstream auth_service {
        server auth-service1:8081;
        server host.docker.internal:8081 backup;
    }

    upstream cart_service {
        server cart-service1:8082;
        server host.docker.internal:8082 backup;
    }

    upstream event_service {
        server event-service1:8083;
        server host.docker.internal:8083 backup;
    }

    upstream kafka_queue_service {
        server kafka-queue-service1:8084;
        server host.docker.internal:8084 backup;
    }

    upstream order_service {
        server order-service1:8085;
        server host.docker.internal:8085 backup;
    }

    upstream payment_service {
        server payment-service1:8086;
        server host.docker.internal:8086 backup;
    }

    upstream product_service {
        server product-service1:8087;
        server host.docker.internal:8087 backup;
    }

    upstream store_service {
        server store-service1:8088;
        server host.docker.internal:8088 backup;
    }

    upstream user_service {
        server user-service1:8089;
        server host.docker.internal:8089 backup;
    }

    server {
        listen 80;

        error_log /var/log/nginx/error.log debug;
        access_log /var/log/nginx/access.log;

        # Routes for microservices
        location /auth_service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";

            # Handle CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://auth_service; 
        }

        location /cart-service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            # Handle CORS (optional, for development)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://cart_service;

        }

        location /event-service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            # Handle CORS (optional, for development)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://event_service;

        }

        location /kafka-queue-service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            # Handle CORS (optional, for development)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://kafka_queue_service;

        }

        location /order-service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            # Handle CORS (optional, for development)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://order_service;

        }

        location /payment-service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            # Handle CORS (optional, for development)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://payment_service;

        }

        location /product-service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            # Handle CORS (optional, for development)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://product_service;

        }

        location /store-service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            # Handle CORS (optional, for development)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://store_service;

        }

        location /user-service/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            # Handle CORS (optional, for development)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET,HEAD,PUT,PATCH,POST,DELETE' always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass http://user_service;

        }
    }
}
